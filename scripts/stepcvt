import sys
sys.path.append("../")
from stepcvt.cli import *
import argparse



if __name__ == "__main__":
    p = argparse.ArgumentParser(description="")
    p.add_argument("-j", dest="jsonfile", type=str, help="Provide the jsonfile")

    sp = p.add_subparsers(dest='command')

    app = sp.add_parser("addpart", help="Add a part")
    # can be no id specified if --all is used
    app.add_argument("id", nargs="*", help="Specify partid for parts to be added")
    app.add_argument("--all",
                     action="store_true",
                     help="Include this if you want to add all of the parts")
    app.set_defaults(func=part.add_part)

    rpp = sp.add_parser("rmpart", help="Remove a part")
    rpp.add_argument("id", nargs="+", help="Specify partid for parts to be removed")
    rpp.set_defaults(func=part.remove_part)

    epp = sp.add_parser("editpart", help="Change part properties")
    # can only change one part at a time
    epp.add_argument("id", help="Specify partid for the part to be edited")
    epp.add_argument("-c", "--count", type=int, help="Change the count of the part")
    epp.set_defaults(func=part.edit_part)

    cvtp = sp.add_parser("stlconvert", help="specify how to convert to stl")
    cvtp.add_argument("partID", nargs="+", help="Specify partid for parts to be added")
    cvtp.add_argument("--rotation", type=int, nargs=3, help="3 integers for x, y, z rotation")
    cvtp.add_argument("--linearTolerance", type=float, nargs=1, help="float for linear tolerance")
    cvtp.add_argument("--angularTolerance", type=float, nargs=1, help="float for angular tolerance")
    cvtp.set_defaults(func=task.stlconvert)

    args = p.parse_args()
    sys.exit(args.func(args))
